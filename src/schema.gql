# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type RespondentModel {
  id: Int!
  name: String!
  email: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  answers: [AnswerModel!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AnswerModel {
  id: Int!
  question: QuestionModel!
  choice: AnswerChoiceModel
  description: String
  respondent: RespondentModel!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AnswerChoiceModel {
  id: Int!
  choice: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  question: QuestionModel!
  answers: [AnswerModel!]!
}

type QuestionModel {
  id: Int!
  question: String!
  answerFormat: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  choices: [AnswerChoiceModel!]!
  answers: [AnswerModel!]!
  user: UserModel!
}

type UserModel {
  id: Int!
  name: String!
  email: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  questions: [QuestionModel!]
}

type LoginResponse {
  accessToken: String!
  user: UserModel!
}

type Query {
  getAllQuestions: [QuestionModel!]!
  getQuestionsByUser(userId: Int!): [QuestionModel!]!
  findOneByEmail(getUserArgs: GetUserArgs!): UserModel
}

input GetUserArgs {
  email: String!
}

type Mutation {
  createQuestionWithAnswerChoices(createQuestionInput: CreateQuestionInput!, createAnswerChoicesInput: [CreateAnswerChoiceInput!]!): QuestionModel!
  login(loginInput: LoginInput!): LoginResponse!
  createUser(createUserInput: CreateUserInput!): UserModel!
  createAnswerWithRespondent(createAnswerInput: CreateAnswerInput!, createRespondentInput: CreateRespondentInput!): AnswerModel!
}

input CreateQuestionInput {
  question: String!
  answerFormat: String!
  userId: Int!
}

input CreateAnswerChoiceInput {
  choice: String!
  questionId: Int!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input CreateAnswerInput {
  questionId: Int!
  choiceId: Int
  description: String
}

input CreateRespondentInput {
  name: String!
  email: String!
}